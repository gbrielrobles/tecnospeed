generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Bank {
  id            String          @id @default(cuid())
  name          String
  cnabs         Cnabs[]
  carriers      Carrier[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  code          String          @unique
  ProductByBank ProductByBank[]

  @@map("banks")
}

model ProductByBank {
  id        String   @id @default(cuid())
  productId String   @map("product_id")
  bankId    String   @map("bank_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bank      Bank     @relation(fields: [bankId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])

  @@map("product_bank")
}

model Product {
  id            String          @id @default(cuid())
  description   String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  name          String
  ProductByBank ProductByBank[]

  @@map("products")
}

model Client {
  id    String @id @default(cuid())
  cnpj  String
  token String

  letter Letter[]

  @@map("client")
}

model Letter {
  id           String          @id @default(cuid())
  createdAt    DateTime        @default(now()) @map("created_at")
  updatedAt    DateTime        @updatedAt @map("updated_at")
  status       StatusOfSending
  carrier      Carrier
  clientId     String          @map("client_id")
  letter       String
  base64letter String?         @map("base_64_letter")

  client     Client       @relation(fields: [clientId], references: [id])
  ticket     String?
  LetterLogs LetterLogs[]

  @@map("letter")
}

model LetterLogs {
  letterId  String @id @map("letter_id")
  attempt   String
  requestId String @map("request_id")
  status    String

  letter Letter @relation(fields: [letterId], references: [id])

  @@map("letter_logs")
}

enum Cnabs {
  CNAB240
  CNAB400
  CNAB444
}

enum StatusOfSending {
  SENDING
  CANCELED
  PENDING
  COMPLETED
}

enum Carrier {
  FINNET
  NEXXERA
}
