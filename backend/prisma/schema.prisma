generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Bank {
  id            String          @id @default(cuid())
  name          String
  cnabs         String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  code          String          @unique
  ProductByBank ProductByBank[]

  @@map("banks")
}

model ProductByBank {
  id        String   @id @default(cuid())
  productId String   @map("product_id")
  bankId    String   @map("bank_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bank      Bank     @relation(fields: [bankId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])

  @@map("product-bank")
}

model Product {
  id            String          @id @default(cuid())
  description   String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  name          String
  ProductByBank ProductByBank[]

  @@map("products")
}

model User {
  id       String  @id @default(cuid())
  name     String
  email    String
  password String
  profile  Profile
  client   Client? @relation("UserClient")

  @@map("user")
}

model Client {
  cnpj   String
  userId String   @id @map("user_id")
  user   User     @relation("UserClient", fields: [userId], references: [id])
  letter Letter[]

  @@map("client")
}

model Letter {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  finnet    String
  nexera    String
  status    Status
  userId    String   @map("user_id")
  client    Client   @relation(fields: [userId], references: [userId])

  @@map("letter")
}

enum Status {
  SEND
  CANCELED
}

enum Profile {
  CLIENT
  ADMIN
}
